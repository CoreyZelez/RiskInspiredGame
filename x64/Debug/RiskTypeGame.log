  EstateManager.cpp
  EstateTest.cpp
  Game.cpp
  LandedEstate.cpp
  Map.cpp
  MapMaker.cpp
  MapHandler.cpp
d:\projects\risktypegame\risktypegame\maphandler.cpp(13): warning C4060: switch statement contains no 'case' or 'default' labels
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0(881): error C2280: 'std::unique_ptr<NavalTerritory,std::default_delete<_Ty>>::unique_ptr(const std::unique_ptr<_Ty,std::default_delete<_Ty>> &)': attempting to reference a deleted function
          with
          [
              _Ty=NavalTerritory
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\memory(2337): note: see declaration of 'std::unique_ptr<NavalTerritory,std::default_delete<_Ty>>::unique_ptr'
          with
          [
              _Ty=NavalTerritory
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\memory(2337): note: 'std::unique_ptr<NavalTerritory,std::default_delete<_Ty>>::unique_ptr(const std::unique_ptr<_Ty,std::default_delete<_Ty>> &)': function was explicitly deleted
          with
          [
              _Ty=NavalTerritory
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory(163): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,_Ty&>(_Alloc &,_Objty *const ,_Ty &)' being compiled
          with
          [
              _Alloc=std::allocator<std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>>>,
              _Ty=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>>,
              _Objty=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory(164): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,_Ty&>(_Alloc &,_Objty *const ,_Ty &)' being compiled
          with
          [
              _Alloc=std::allocator<std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>>>,
              _Ty=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>>,
              _Objty=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory(190): note: see reference to function template instantiation 'void std::_Uninitialized_backout_al<_FwdIt,_Alloc>::_Emplace_back<_Ty&>(_Ty &)' being compiled
          with
          [
              _FwdIt=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>> *,
              _Alloc=std::allocator<std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>>>,
              _Ty=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory(190): note: see reference to function template instantiation 'void std::_Uninitialized_backout_al<_FwdIt,_Alloc>::_Emplace_back<_Ty&>(_Ty &)' being compiled
          with
          [
              _FwdIt=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>> *,
              _Alloc=std::allocator<std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>>>,
              _Ty=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory(217): note: see reference to function template instantiation '_FwdIt std::_Uninitialized_copy_al_unchecked<_Ty*,_Ty*,_Alloc>(_InIt,const _InIt,const _FwdIt,_Alloc &,std::_General_ptr_iterator_tag,std::_Any_tag)' being compiled
          with
          [
              _FwdIt=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>> *,
              _Ty=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>>,
              _Alloc=std::allocator<std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>>>,
              _InIt=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>> *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector(1823): note: see reference to function template instantiation '_FwdIt *std::_Uninitialized_copy<_Iter,std::unique_ptr<NavalTerritory,std::default_delete<_Ty>>*,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>(const _InIt,const _InIt,_FwdIt,_Alloc &)' being compiled
          with
          [
              _FwdIt=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>> *,
              _Iter=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>> *,
              _Ty=NavalTerritory,
              _InIt=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>> *,
              _Alloc=std::allocator<std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector(738): note: see reference to function template instantiation 'std::unique_ptr<NavalTerritory,std::default_delete<_Ty>> *std::vector<std::unique_ptr<_Ty,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>::_Ucopy<std::unique_ptr<_Ty,std::default_delete<_Ty>>*>(_Iter,_Iter,std::unique_ptr<_Ty,std::default_delete<_Ty>> *)' being compiled
          with
          [
              _Ty=NavalTerritory,
              _Iter=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>> *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector(738): note: see reference to function template instantiation 'std::unique_ptr<NavalTerritory,std::default_delete<_Ty>> *std::vector<std::unique_ptr<_Ty,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>::_Ucopy<std::unique_ptr<_Ty,std::default_delete<_Ty>>*>(_Iter,_Iter,std::unique_ptr<_Ty,std::default_delete<_Ty>> *)' being compiled
          with
          [
              _Ty=NavalTerritory,
              _Iter=std::unique_ptr<NavalTerritory,std::default_delete<NavalTerritory>> *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector(732): note: while compiling class template member function 'std::vector<std::unique_ptr<NavalTerritory,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>::vector(const std::vector<std::unique_ptr<_Ty,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>> &)'
          with
          [
              _Ty=NavalTerritory
          ]
  d:\projects\risktypegame\risktypegame\maphandler.cpp(6): note: see reference to function template instantiation 'std::vector<std::unique_ptr<NavalTerritory,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>::vector(const std::vector<std::unique_ptr<_Ty,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>> &)' being compiled
          with
          [
              _Ty=NavalTerritory
          ]
  d:\projects\risktypegame\risktypegame\territorymanager.h(34): note: see reference to class template instantiation 'std::vector<std::unique_ptr<NavalTerritory,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' being compiled
          with
          [
              _Ty=NavalTerritory
          ]
  MilitaryForce.cpp
  Barony.cpp
d:\projects\risktypegame\risktypegame\barony.cpp(32): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
d:\projects\risktypegame\risktypegame\barony.cpp(32): warning C4244: 'initializing': conversion from 'double' to 'const int', possible loss of data
d:\projects\risktypegame\risktypegame\barony.cpp(48): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
d:\projects\risktypegame\risktypegame\barony.cpp(48): warning C4244: 'initializing': conversion from 'double' to 'const int', possible loss of data
  LandArmy.cpp
d:\projects\risktypegame\risktypegame\landarmy.cpp(45): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
d:\projects\risktypegame\risktypegame\landarmy.cpp(46): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
  LandTerritory.cpp
  NavalFleet.cpp
  NavalTerritory.cpp
  Realm.cpp
  RiskTypeGame.cpp
  Territory.cpp
  TerritoryMaker.cpp
  TerritoryManager.cpp
  EstateMaker.cpp
  Generating Code...
d:\projects\risktypegame\risktypegame\title.h(36): warning C4172: returning address of local variable or temporary: originalTitle
